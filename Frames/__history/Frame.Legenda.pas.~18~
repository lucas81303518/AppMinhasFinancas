unit Frame.Legenda;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  FMX.Objects, FMX.Controls.Presentation;

  {
    TituloConta: string;
    ValorTotal, Porcentagem: Currency;
    Cor: TAlphaColor
  }

type
  TTipoContaFrame = class
  private
    FIdTipoConta: Integer;
    FTituloConta: string;
    FValorTotal: Currency;
    FPorcentagem: Currency;
    FCor: TAlphaColor;
  public
    property IdTipoConta: Integer read FIdTipoConta write FIdTipoConta;
    property TituloConta: string read FTituloConta write FTituloConta;
    property ValorTotal: Currency read FValorTotal write FValorTotal;
    property Porcentagem: Currency read FPorcentagem write FPorcentagem;
    property Cor: TAlphaColor read FCor write FCor;
  end;

  TFrameLegenda = class(TFrame)
    Circulo: TCircle;
    lblTipoConta: TLabel;
    Line1: TLine;
    lblValorTotal: TLabel;
    lblPorcentagem: TLabel;
    Rectangle1: TRectangle;
    RectProgressBar: TRectangle;
    progressBar: TRectangle;
  private
    { Private declarations }
    FIdTipoConta: Integer;
  public
    { Public declarations }
    property IdTipoConta: integer read FIdTipoConta write FIdTipoConta;
    procedure SetColorProgressBar(Porcentagem: Currency; Cor: TAlphaColor);
    constructor Create(AOwner: TComponent; TipoContaFrame: TTipoContaFrame);
  end;

implementation

{$R *.fmx}

{ TFrameLegenda }

constructor TFrameLegenda.Create(AOwner: TComponent;
  TipoContaFrame: TTipoContaFrame);
begin
  inherited Create(AOwner);
  Tag                 := TipoContaFrame.IdTipoConta;
  Circulo.Fill.Color  := TipoContaFrame.Cor;
  lblTipoConta.Text   := TipoContaFrame.TituloConta;
  lblValorTotal.Text  := FormatFloat('R$ #,##.00', TipoContaFrame.ValorTotal);
  SetColorProgressBar(TipoContaFrame.Porcentagem, TipoContaFrame.Cor);
  lblPorcentagem.Text := FormatFloat('##.0', TipoContaFrame.Porcentagem) + '%';
end;

procedure TFrameLegenda.SetColorProgressBar(Porcentagem: Currency;
  Cor: TAlphaColor);
var
  ValorMaximo: Single;
begin
  ValorMaximo := RectProgressBar.Width;
  progressBar.Width := ValorMaximo * (Porcentagem / 100);
  progressBar.Fill.Color := Cor;
end;

end.
