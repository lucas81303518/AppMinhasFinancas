unit DAO.TipoDeConta;

interface

uses
  UIDAOTipoDeContas, Generics.Collections, Model.TipoDeConta, System.JSON;

type
  TDAOTipoDeConta = class(TInterfacedObject, IDAOTipoDeContas)
  private
    function MontaJson(aTipoConta: TTipoConta): TJSONObject;
    function MontaObjeto(AJson: TJSONObject): TTipoConta;
  public
    function Add(aTipoConta: TTipoConta): Boolean;
    function Update(aTipoConta: TTipoConta): Boolean;
    function GetAll: TObjectList<TTipoConta>;
    function Get(Id: Integer): TTipoConta;
end;

implementation

uses
  Dmodulo;

{ TDAOTipoDeConta }

function TDAOTipoDeConta.Add(aTipoConta: TTipoConta): Boolean;
var
  JSONObject: TJSONObject;
begin
  JSONObject := MontaJson(aTipoConta);

end;

function TDAOTipoDeConta.Get(Id: Integer): TTipoConta;
begin

end;

function TDAOTipoDeConta.GetAll: TObjectList<TTipoConta>;
begin

end;

function TDAOTipoDeConta.MontaJson(aTipoConta: TTipoConta): TJSONObject;
begin
  with aTipoConta do
  begin
    Result    := TJSONObject.Create;
    Result.AddPair('NomeConta', NomeConta);
    Result.AddPair('Tipo', Tipo);
  end;
end;

function TDAOTipoDeConta.MontaObjeto(AJson: TJSONObject): TTipoConta;
begin
  Result := TTipoConta.Create;
  Result.Id := AJson.GetValue<Integer>('Id');
  Result.NomeConta := AJson.GetValue<string>('NomeConta');
  Result.Tipo := AJson.GetValue<Integer>('Tipo');
end;

function TDAOTipoDeConta.Update(aTipoConta: TTipoConta): Boolean;
begin

end;

end.
