unit DAO.Documento;

interface

uses
  Generics.Collections, Model.Documentos, UIDAODocumentos, System.JSON;

type
  TDAODocumento = class(TInterfacedObject, IDAODocumento)
  private
    function MontaJson(Documento: TDocumento): TJSONObject;
    function MontaObject(JSONObject: TJSONObject): TDocumento;
  public
    function Add(Documento: TDocumento): Boolean;
    function Update(Documento: TDocumento): Boolean;
end;


implementation

{ TDAODocumento }
function TDAODocumento.Add(Documento: TDocumento): Boolean;
begin

end;

function TDAODocumento.MontaJson(Documento: TDocumento): TJSONObject;
begin

end;

function TDAODocumento.MontaObject(JSONObject: TJSONObject): TDocumento;
begin
  with JSONObject do
  begin
    Result                  := TDocumento.Create;
    Result.Id               := GetValue<Integer>('id');
    Result.NumeroDocumento  := GetValue<string>('numeroDocumento');
    Result.Descricao        := GetValue<string>('descricao');
    result.DataDocumento    := GetValue<TDateTime>('dataDocumento');
    result.QtdParcelas      := GetValue<Integer>('qtdParcelas');
    Result.Status           := GetValue<string>('status');
    Result.CodigoMeta       := GetValue<Integer>('codMeta');
    Result.FormaPagamentoId := GetValue<Integer>('formaPagamentoId');
    Result.TipoContaId      := GetValue<Integer>('tipoContaId');
    Result.UsuarioId        := GetValue<Integer>('usuarioId');
  end;
end;

function TDAODocumento.Update(Documento: TDocumento): Boolean;
begin

end;

end.
